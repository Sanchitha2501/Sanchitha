#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node* left;
    struct node* right;
};

struct node* create(int value) 
{
    struct node* new_node = (struct node*) malloc(sizeof(struct node));
    new_node->data = value;
    new_node->left = NULL;
    new_node->right = NULL;
    
    return new_node;
}

struct node* insert(struct node* root, int value) 
{
    if (root == NULL) 
    {
        return create(value);
    }
    struct node* curr = root;
    while (curr != NULL) 
    {
        if (value > curr->data) 
        {
            if (curr->right == NULL) 
            {
                curr->right = create(value);
                break;
            }
            curr = curr->right;
        } 
        else if (value < curr->data) 
        {
            if (curr->left == NULL) 
            {
                curr->left = create(value);
                break;
            }
            curr = curr->left;
        } 
    }
    
    return root;
}

void inorder(struct node* root) 
{
     if (root == NULL)
    {
        return;
    }
    inorder(root->left);
    printf("%d ", root->data);
    inorder(root->right);
}

struct node* minValue(struct node* node) 
{
    struct node *current = node;
    while (current && current->left != NULL) 
    {
        current = current->left;
    }
    
    return current;
}

struct node* deleteNode(struct node* root, int value) 
{
    if (root == NULL) 
    {
        return root;
    } 
    else if (value < root->data) 
    {
        root->left = deleteNode(root->left, value);
    } 
    else if (value > root->data) 
    {
        root->right = deleteNode(root->right, value);
    } 
    else {
        if (root->left == NULL) 
        {
            struct node *temp = root->right;
            free(root);
            return temp;
        } 
        else if (root->right == NULL) 
        {
            struct node *temp = root->left;
            free(root);
            return temp;
        }
        struct node *temp = minValue(root->right);
        root->data = temp->data;
        root->right = deleteNode(root->right, temp->data);
    }
    
    return root;
}

int main() {
    struct node* root = NULL;
    int n, value;
    printf("Enter number of nodes: ");
    scanf("%d", &n);
    printf("Enter values:\n");
    for (int i = 0; i < n; i++) 
    {
        scanf("%d", &value);
        root = insert(root, value);
    }
    printf("\nEnter value to be deleted: ");
    scanf("%d", &value);
    root = deleteNode(root, value);
    printf("After deleting %d:\n", value);
    inorder(root);
    
    return 0;
}
