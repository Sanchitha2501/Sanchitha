#include <stdio.h>
#include <stdlib.h>

struct node 
{
    int data;
    struct node* left;
    struct node* right;
};

struct node* create(int value) 
{
    struct node* new_node = (struct node*) malloc(sizeof(struct node));
    new_node->data = value;
    new_node->left = NULL;
    new_node->right = NULL;
    
    return new_node;
}

struct node* insert(struct node* root, int value) 
{
    if (root == NULL) 
    {
        return create(value);
    }
    struct node* current = root;
    while (current != NULL)
    {
        if (value > current->data) 
        {
            if (current->right == NULL) 
            {
                current->right = create(value);
                break;
            }
            current = current->right;
        } else if (value < current->data) 
        {
            if (current->left == NULL)
            {
                current->left = create(value);
                break;
            }
            current = current->left;
        }
    }
    
    return root;
}

void bfs(struct node* root)
{
    if (root == NULL) 
    {
        return;
    }
    struct node* queue[100]; 
    int front=0, rear=0;
    queue[rear++] = root;
    while (front < rear) 
    {
        struct node* current = queue[front++];
        printf("%d ", current->data);
        if (current->left != NULL) 
        {
            queue[rear++] = current->left;
        }
        if (current->right != NULL) 
        {
            queue[rear++] = current->right;
        }
    }
}

int main() {
    struct node* root = NULL;
    int n, value;
    printf("Enter number of nodes: ");
    scanf("%d", &n);
    printf("Enter values:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &value);
        root = insert(root, value);
    }
    printf("BFS traversal:\n");
    bfs(root);
    
    return 0;
}
